{"version":3,"file":"static/js/547.20fc457c.chunk.js","mappings":"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","sources":["webpack://react-hw-08-phonebook/./src/components/PhoneBook/phoneBook.module.css?e1a6","redux/filter/filter-selectors.js","redux/contacts/contacts-selectors.js","components/PhoneBook/ContactForm/initialState.js","webpack://react-hw-08-phonebook/./src/components/PhoneBook/ContactForm/contactForm.module.css?6235","shared/hooks/useForm.js","components/PhoneBook/ContactForm/ContactForm.jsx","webpack://react-hw-08-phonebook/./src/components/PhoneBook/ContactList/contactList.module.css?311f","components/PhoneBook/ContactList/ContactList.jsx","components/PhoneBook/Filter/Filter.jsx","components/PhoneBook/PhoneBook.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"phoneBook_container__1tas1\"};","export const getFilter = store => store.filter;\n","// import { store } from 'redux/store';\n\nexport const getContacts = store => store.contacts.items;\nexport const getIsLoading = store => store.contacts.isLoading;\nexport const getError = store => store.contacts.error;\n","export const initialState = {\n  name: \"\",\n  number: \"\",\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"contactForm_form__ZLBTT\",\"input\":\"contactForm_input__KfkWc\"};","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n  return { state, setState, handleChange, handleSubmit };\n};\nexport default useForm;\n","import { initialState } from './initialState';\n\nimport style from './contactForm.module.css';\n\nimport useForm from 'shared/hooks/useForm';\n\nconst ContactForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const { name, number } = state;\n\n  return (\n    <form action=\"\" onSubmit={handleSubmit} className={style.form}>\n      <div className={style.input}>\n        <label htmlFor=\"\">Name</label> <br />\n        <input\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </div>\n      <div className={style.input}>\n        <label htmlFor=\"\">Number</label> <br />\n        <input\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </div>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"contactList_btn__dFhB7\"};","import PropTypes from 'prop-types';\n\nimport styles from './contactList.module.css';\n\nconst ContactList = ({ contacts, removeContact }) => {\n  const elements = contacts.map(({ id, name, number }) => (\n    <li key={id}>\n      {' '}\n      {name}: {number}\n      <button className={styles.btn} onClick={() => removeContact(id)}>\n        Delete\n      </button>\n    </li>\n  ));\n  return <ul>{elements}</ul>;\n};\n\nContactList.propTypes = {\n  removeContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\n\nconst Filter = ({ filter, changeFilter }) => {\n  return (\n    <div>\n      <label htmlFor=\"\">Find contact by name</label> <br />\n      <input onChange={changeFilter} value={filter} type=\"text\" name=\"filter\" />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  changeFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from 'redux/contacts/operations';\n\nimport styles from './phoneBook.module.css';\n\nimport { setFilter } from 'redux/filter/filtersSlice';\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport {\n  getContacts,\n  getIsLoading,\n  getError,\n} from '../../redux/contacts/contacts-selectors';\n\nimport Loader from 'shared/components/Loader';\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\n\nconst PhoneBook = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const addNewContact = data => {\n    const isDuplicated = contacts\n      ? contacts.find(contact => contact.name === data.name)\n      : false;\n    if (isDuplicated) {\n      alert(`${data.name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact(data));\n  };\n  const removeContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const changeFilter = ({ target }) => dispatch(setFilter(target.value));\n\n  const filterText = filter.toLowerCase();\n  const filterContacts = contacts.filter(({ name }) => {\n    const result = name.toLowerCase().includes(filterText);\n    return result;\n  });\n\n  return (\n    <div className={styles.container}>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addNewContact} />\n      <h2>Contacts</h2>\n      <Filter filter={filter} changeFilter={changeFilter} />\n      {isLoading && !error && <Loader />}\n      <ContactList contacts={filterContacts} removeContact={removeContact} />\n    </div>\n  );\n};\n\nexport default PhoneBook;\n"],"names":["getFilter","store","filter","getContacts","contacts","items","getIsLoading","isLoading","getError","error","initialState","name","number","onSubmit","useState","state","setState","handleChange","target","value","handleSubmit","event","preventDefault","useForm","action","className","style","htmlFor","type","onChange","pattern","title","required","removeContact","elements","map","id","styles","onClick","changeFilter","dispatch","useDispatch","useSelector","useEffect","fetchContacts","filterText","toLowerCase","filterContacts","includes","data","find","contact","alert","addContact","setFilter","Loader","deleteContact"],"sourceRoot":""}